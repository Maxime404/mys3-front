[{"C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\index.js":"1","C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\Profil.js":"2","C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\SignUp.js":"3","C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\Header.js":"4","C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\Home.js":"5","C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\Bucket.js":"6","C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\ResetPassword.js":"7","C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\SignIn.js":"8"},{"size":517,"mtime":1609983061478,"results":"9","hashOfConfig":"10"},{"size":6352,"mtime":1610039783155,"results":"11","hashOfConfig":"10"},{"size":5854,"mtime":1610039783448,"results":"12","hashOfConfig":"10"},{"size":1058,"mtime":1609955251905,"results":"13","hashOfConfig":"10"},{"size":4916,"mtime":1610039783028,"results":"14","hashOfConfig":"10"},{"size":4496,"mtime":1610046969602,"results":"15","hashOfConfig":"10"},{"size":3263,"mtime":1610039783287,"results":"16","hashOfConfig":"10"},{"size":3342,"mtime":1610039783394,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"dylztx",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\index.js",[],["36","37"],"C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\Profil.js",["38"],"import React, { Component } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nimport Header from './Header';\r\n\r\nexport default class SignUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: {},\r\n            token: '',\r\n            firstname: '',\r\n            lastname: '',\r\n            nickname: '',\r\n            error: '',\r\n            isUpdatedUser: false,\r\n            redirectionToSignIn: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataStorage()\r\n    }\r\n\r\n    async getDataStorage() {\r\n        const data = await JSON.parse(localStorage.getItem('data'))\r\n        if (!data || !data.user || !data.meta.token) {\r\n            console.log('Some storage item is missing')\r\n            this.setState({ redirectionToSignIn: true })\r\n        } else {\r\n            this.setState({ user: data.user, token: data.meta.token })\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value, isUpdatedUser: false, error: '' })\r\n    }\r\n\r\n    updateUser = async () => {\r\n        const { user, token, firstname, lastname, nickname } = this.state\r\n        if (!firstname && !lastname && !nickname) {\r\n            this.setState({ error: \"You need to modify a minimum of one field\" })\r\n        } else {\r\n            const req = await fetch(`${process.env.REACT_APP_API_URL}api/users/${user.uuid}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({\r\n                    firstname: this.state.firstname ? firstname.trim() : user.firstname,\r\n                    lastname: this.state.lastname ? lastname.trim() : user.lastname,\r\n                    nickname: this.state.nickname ? nickname.trim() : user.nickname,\r\n                })\r\n            })\r\n            try {\r\n                const json = await req.json()\r\n                if (json.err) {\r\n                    this.setState({ error: json.err.description })\r\n                } else {\r\n                    //console.log(json.data)\r\n                    await this.updateDataStorage({\r\n                        user: json.data.user,\r\n                        meta: {\r\n                            token: this.state.token\r\n                        }\r\n                    })\r\n                    this.setState({ isUpdatedUser: true })\r\n                    console.log('User updated !')\r\n\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    logOutUser = async () => {\r\n        await this.deleteDataStorage()\r\n        this.setState({ redirectionToSignIn: true })\r\n\r\n    }\r\n\r\n    deleteUser = async () => {\r\n        const { user, token } = this.state\r\n        const req = await fetch(`${process.env.REACT_APP_API_URL}api/users/${user.uuid}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n        try {\r\n            const json = await req.json()\r\n            if (json.err) {\r\n                this.setState({ error: json.err.description })\r\n            } else {\r\n                //console.log(json.data)\r\n                await this.deleteDataStorage()\r\n                this.setState({ redirectionToSignIn: true })\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateDataStorage = async (data) => {\r\n        try {\r\n            console.log(data)\r\n            await localStorage.setItem('data', JSON.stringify(data))\r\n        } catch (error) {\r\n            console.log('Local storage data Error : ', error)\r\n        }\r\n    }\r\n\r\n    deleteDataStorage = async () => {\r\n        try {\r\n            await localStorage.removeItem('data')\r\n        } catch (error) {\r\n            console.log('Local storage data Error : ', error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectionToSignIn) {\r\n            return <Redirect to='/sign-in' />\r\n        } else {\r\n            const { user, isUpdatedUser, error } = this.state\r\n            return (\r\n                <div className=\"container auth-wrapper\">\r\n                    <div className=\"row\">\r\n                        <div className=\"auth-inner col-sm-12 col-md-6 col-lg-3 px-4\">\r\n                            <Header />\r\n\r\n                            <h3>Mon profil</h3>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Prénom</label>\r\n                                <input type=\"text\" name=\"firstname\" className=\"form-control\" placeholder={user.firstname} value={this.state.firstname} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Nom</label>\r\n                                <input type=\"text\" name=\"lastname\" className=\"form-control\" placeholder={user.lastname} value={this.state.lastname} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Pseudo</label>\r\n                                <input type=\"text\" name=\"nickname\" className=\"form-control\" placeholder={user.nickname} value={this.state.nickname} onChange={this.handleChange} />\r\n                            </div>\r\n                            {isUpdatedUser && <div className=\"block-message block-notify mb-3\">Profil mis-à-jour !</div>}\r\n                            {error && <div className=\"block-message block-error mb-3\">{error}</div>}\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={this.updateUser}>Mettre à jour mon profil</button>\r\n                            <button type=\"submit\" className=\"btn btn-secondary btn-block\" onClick={this.logOutUser}>Se déconnecter</button>\r\n                            <button type=\"submit\" className=\"btn btn-danger btn-block mt-5\" onClick={this.deleteUser}>Supprimer mon compte</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\SignUp.js",[],"C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\Header.js",["39"],"C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\Home.js",["40"],"C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\Bucket.js",[],"C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\ResetPassword.js",["41"],"C:\\Users\\assam\\Desktop\\workspace\\mys3-front\\src\\components\\SignIn.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":20,"nodeType":"48","messageId":"49","endLine":2,"endColumn":24},{"ruleId":"50","severity":1,"message":"51","line":5,"column":5,"nodeType":"52","messageId":"53","endLine":7,"endColumn":6},{"ruleId":"46","severity":1,"message":"54","line":104,"column":45,"nodeType":"48","messageId":"49","endLine":104,"endColumn":55},{"ruleId":"46","severity":1,"message":"55","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":18},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'bucketName' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]